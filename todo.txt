Todo oscar:
built ins out of forks with pipe and ctrl c

Todo Francois:


Done:

this is pipe word for test with grep

comment on gere les ' " ; \ $ et autres char speciaux
http://www.zeitoun.net/articles/communication-par-tuyau/start
http://www.rozmichelle.com/pipes-forks-dups/

signaux dans les built ins
export > caca.txt | caca.txt < grep SHL
export > caca.txt | grep SHL < caca.txt
cat Makefile > caca.txt | grep all < caca.txt
cat Makefile > caca.txt | cat < caca.txt

cat Makefile > caca.txt | grep SHL < caca.txt

export | grep SHL
export | export
cat Makefile | export | grep SHL

cd - marche pas]
export > caca.txt

cat | grep 
cat | cat | ls

ctrl z kills

// void	ft_print_parsing_results(t_mother *s)
// {
//     t_command	*cmd;
// 	t_token		*tok;
// 	int			i;

//     cmd = s->c;
// 	tok = s->lex->first_token;
// 	while (tok->next != NULL)
//     {
//         printf("[%s] of type [%c]\n", tok->token, tok->type);
//         tok = tok->next;
//     }
// 	printf("[%s] of type [%c]\n", tok->token, tok->type);
//     printf("\n\n");
//     while (cmd->nextpipe != NULL)
//     {
// 		printf("  ||\n  ||BEFORE = %i or %i or %i\n  ||\n", cmd->isprecededbypipe, cmd->isprecededbyche, cmd->isprecededbydoubleche);
// 		printf("_________________________________________\n");
// 		if (cmd->line != NULL)
//         	printf("[%s] of command [%s] with cmd_status [%c]\n", cmd->line, cmd->command, cmd->cmd_status + 97);
// 		else 
// 			printf("line is NULL\n");
// 		printf("Using following args =\n");
// 		i = 0;
// 		while (cmd->arg[i])
// 		{
// 			printf("||%s\n", cmd->arg[i]);
// 			i++;
// 		}
// 		printf(" with infile = %s and outile = %s\n", cmd->inputfile, cmd->outfile);
// 		printf("-----------------------------------------\n");
// 		printf("  ||\n  ||AFTER = %i or %i or %i\n  ||\n", cmd->isfollowedbypipe, cmd->isfollowedbyche, cmd->isfollowedbydoubleche);
//         cmd = cmd->nextpipe;
//     }
// 	printf("  ||\n  ||BEFORE = %i or %i or %i\n  ||\n", cmd->isprecededbypipe,  cmd->isprecededbyche, cmd->isprecededbydoubleche);
// 	printf("_________________________________________\n");
//     printf("[%s] of command [%s] with cmd_status [%c]\n", cmd->line, cmd->command, cmd->cmd_status + 97);
// 	i = 0;
// 	while (cmd->arg[i])
// 	{
// 		printf("||%s\n", cmd->arg[i]);
// 		i++;
// 	}
// 	printf(" with infile = %s and outile = %s\n", cmd->inputfile, cmd->outfile);
// 	printf("-----------------------------------------\n");
// 	printf("  ||\n  ||AFTER = %i or %i or %i\n  ||\n", cmd->isfollowedbypipe, cmd->isfollowedbyche, cmd->isfollowedbydoubleche);
// 	if (s->lex->std_input_redir != NULL)
// 		printf("<< input was :\n%s\n", s->lex->std_input_redir);
// }